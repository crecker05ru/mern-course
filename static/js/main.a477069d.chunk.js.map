{"version":3,"sources":["context/AuthContext.js","hooks/http.hook.js","components/Loader.js","components/LinksList.js","pages/LinksPage.js","pages/CreatePage.js","components/LinkCard.js","pages/DetailPage.js","pages/AuthPage.js","hooks/message.hook.js","hooks/auth.hook.js","components/Navbar.js","App.js","pages/routes.js","reportWebVitals.js","index.js"],"names":["noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","Loader","style","display","justifyContent","paddingTop","className","LinksList","links","length","map","link","index","from","to","_id","LinksPage","Component","setLinks","useContext","fetchLinks","Authorization","fetched","useEffect","CreatePage","history","useHistory","auth","setLink","window","M","updateTextFields","pressHandler","event","key","push","placeholder","id","type","value","onChange","e","target","onKeyPress","htmlFor","LinkCard","href","rel","clicks","Date","date","toLocaleDateString","DetailPage","linkId","useParams","getLink","AuthPage","text","toast","html","email","password","form","setForm","changeHandler","name","registerHandler","loginHandler","marginRight","disabled","onClick","storageName","Navbar","padding","preventDefault","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAEA,SAASA,KAEF,IAAMC,EAAcC,wBAAc,CACrCC,MAAO,KACPC,OAAQ,KACRC,MAAOL,EACPM,OAAQN,EACRO,iBAAiB,ICPRC,EAAU,WAAM,IAAD,EACKC,oBAAS,GADd,mBACjBC,EADiB,KACTC,EADS,OAEEF,mBAAS,MAFX,mBAEjBG,EAFiB,KAEVC,EAFU,KA2BxB,MAAO,CAACH,UAASI,QAvBDC,sBAAW,uCAAC,WAAMC,GAAN,mCAAAC,EAAA,6DAAWC,EAAX,+BAAoB,MAAMC,EAA1B,+BAAiC,KAAMC,EAAvC,+BAAiD,GACzET,GAAW,GADa,SAGjBQ,IACCA,EAAOE,KAAKC,UAAUH,GACtBC,EAAQ,gBAAkB,oBALV,SAOGG,MAAMP,EAAK,CAACE,SAAQC,OAAKC,YAP5B,cAOdI,EAPc,iBAQDA,EAASC,OARR,WAQdC,EARc,OAUfF,EAASG,GAVM,uBAWV,IAAIC,MAAMF,EAAKG,SAAW,kGAXhB,eAapBlB,GAAW,GAbS,kBAebe,GAfa,wCAiBpBf,GAAW,GACXE,EAAS,KAAEgB,SAlBS,+DAAD,sDAqBzB,IAEwBjB,QAAMkB,WADbf,uBAAa,kBAAMF,EAAS,QAAM,M,OC3B5CkB,EAAS,kBAClB,qBAAKC,MAAO,CAACC,QAAS,OAAOC,eAAgB,SAAUC,WAAY,QAAnE,SACI,qBAAKC,UAAU,2BAAf,SACI,sBAAKA,UAAU,iCAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,qBAAKA,UAAU,aAEnB,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,aAEnB,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,qBCVtBC,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACxB,OAAKA,EAAMC,OAIP,kCACI,gCACA,+BACI,mCACA,0GACA,oGACA,iFAIJ,gCACCD,EAAME,KAAI,SAACC,EAAMC,GACd,OACI,+BACI,6BAAKA,EAAQ,IACb,6BAAKD,EAAKE,OACV,6BAAKF,EAAKG,KACV,6BACI,cAAC,IAAD,CAAMA,GAAE,kBAAaH,EAAKI,KAA1B,4DALCJ,EAAKI,aAhBnB,mBAAGT,UAAU,SAAb,iGCWFU,GANUC,YAME,WAAM,IAAD,EACAtC,mBAAS,IADT,mBACnB6B,EADmB,KACZU,EADY,OAECxC,IAApBE,EAFmB,EAEnBA,QAASI,EAFU,EAEVA,QACTX,EAAS8C,qBAAWhD,GAApBE,MAED+C,EAAanC,sBAAW,sBAAE,4BAAAE,EAAA,+EAEFH,EAAQ,YAAa,MAAO,KAAM,CACpDqC,cAAc,UAAD,OAAYhD,KAHL,OAElBiD,EAFkB,OAKxBJ,EAASI,GALe,uGAO9B,CAACjD,EAAOW,IAMV,OAJAuC,qBAAW,WACPH,MACF,CAACA,IAECxC,EACO,cAAC,EAAD,IAGP,oCACMA,GAAW,cAAC,EAAD,CAAW4B,MAAOA,QChC9BgB,EAAa,WACtB,IAAMC,EAAUC,cACVC,EAAOR,qBAAWhD,GACjBa,EAAWN,IAAXM,QAHoB,EAIHL,mBAAS,IAJN,mBAIpBgC,EAJoB,KAIdiB,EAJc,KAM3BL,qBAAU,WACNM,OAAOC,EAAEC,qBACX,IAEF,IAAMC,EAAY,uCAAI,WAAMC,GAAN,eAAA9C,EAAA,yDACD,UAAd8C,EAAMC,IADS,0CAGSlD,EAAQ,qBAAqB,OAAO,CAAC6B,KAAKF,GAAM,CAC/DU,cAAc,UAAD,OAAYM,EAAKtD,SAJxB,OAGJuB,EAHI,OAMV6B,EAAQU,KAAR,iBAAuBvC,EAAKe,KAAKI,MANvB,yGAAJ,sDAalB,OACQ,qBAAKT,UAAU,MAAf,SACA,qBAAKA,UAAU,mBAAmBJ,MAAO,CAACG,WAAY,QAAtD,SACI,sBAAKC,UAAU,cAAf,UACI,uBAAO8B,YAAY,kFACZC,GAAG,OACHC,KAAK,OACLC,MAAO5B,EACP6B,SAAU,SAAAC,GAAC,OAAIb,EAAQa,EAAEC,OAAOH,QAChCI,WAAYX,IAEnB,uBAAOY,QAAQ,OAAf,qGCvCPC,EAAW,SAAC,GAAY,IAAXlC,EAAU,EAAVA,KACtB,OACI,qCACI,sEAEA,gGAAgB,mBAAGmC,KAAMnC,EAAKG,GAAI4B,OAAO,SAASK,IAAI,sBAAtC,SAA6DpC,EAAKG,QAClF,uEAAW,mBAAGgC,KAAMnC,EAAKE,KAAM6B,OAAO,SAASK,IAAI,sBAAxC,SAA+DpC,EAAKE,UAC/E,sLAAgC,iCAASF,EAAKqC,YAC9C,4GAAkB,iCAAS,IAAIC,KAAKtC,EAAKuC,MAAMC,8BCC9CC,EAAa,WAAM,IACrB/E,EAAS8C,qBAAWhD,GAApBE,MADoB,EAEAK,IAApBM,EAFoB,EAEpBA,QAASJ,EAFW,EAEXA,QAFW,EAGHD,mBAAS,MAHN,mBAGpBgC,EAHoB,KAGdiB,EAHc,KAIrByB,EAASC,cAAYjB,GAErBkB,EAAUtE,sBAAW,sBAAE,4BAAAE,EAAA,+EAECH,EAAQ,aAAD,OAAcqE,GAAU,MAAO,KAAK,CAC7DhC,cAAc,UAAD,OAAYhD,KAHR,OAEfiD,EAFe,OAKrBM,EAAQN,GALa,uGAO1B,CAACjD,EAAOgF,EAAQrE,IAMnB,OAJAuC,qBAAW,WACPgC,MACD,CAACA,IAEA3E,EACO,cAAC,EAAD,IAGP,oCACOA,GAAW+B,GAAQ,cAAC,EAAD,CAAWA,KAAMA,O,gBC7BtC6C,EAAW,WACpB,IAAM7B,EAAOR,qBAAWhD,GAClB4B,ECJCd,uBAAY,SAAAwE,GACX5B,OAAOC,GAAK2B,GACZ5B,OAAOC,EAAE4B,MAAM,CAAEC,KAAMF,MAE7B,IDFuB,EAGkB/E,IAApCE,EAHkB,EAGlBA,QAAQI,EAHU,EAGVA,QAAQF,EAHE,EAGFA,MAAMkB,EAHJ,EAGIA,WAHJ,EAIDrB,mBAAS,CAC7BiF,MAAM,GAAIC,SAAS,KALE,mBAIlBC,EAJkB,KAIZC,EAJY,KAOzBxC,qBAAU,WACNxB,EAAQjB,GACRkB,MACF,CAAClB,EAAMiB,EAAQC,IAEjBuB,qBAAU,WACNM,OAAOC,EAAEC,qBACX,IAEF,IAAMiC,EAAgB,SAAA/B,GAClB8B,EAAQ,2BAAID,GAAL,kBAAY7B,EAAMS,OAAOuB,KAAOhC,EAAMS,OAAOH,UAGlD2B,EAAe,uCAAG,4BAAA/E,EAAA,+EAEGH,EAAQ,qBAAqB,OAAtB,eAAiC8E,IAF3C,OAEVlE,EAFU,OAGhBG,EAAQH,EAAKG,SAHG,uGAAH,qDAMfoE,EAAY,uCAAG,4BAAAhF,EAAA,+EAEMH,EAAQ,kBAAkB,OAAnB,eAA8B8E,IAF3C,OAEPlE,EAFO,OAGb+B,EAAKpD,MAAMqB,EAAKvB,MAAOuB,EAAKtB,QAHf,uGAAH,qDASlB,OACI,qBAAKgC,UAAU,MAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,iHACA,sBAAKA,UAAU,qBAAf,UACI,sBAAKA,UAAU,0BAAf,UACI,sBAAMA,UAAU,aAAhB,gFACA,gCACI,sBAAKA,UAAU,cAAf,UACI,uBAAO8B,YAAY,mDACZC,GAAG,QACHC,KAAK,OACL2B,KAAK,QACL3D,UAAU,eACViC,MAAOuB,EAAKF,MACZpB,SAAUwB,IAEb,uBAAOpB,QAAQ,QAAf,sBAER,sBAAKtC,UAAU,cAAf,UACI,uBAAO8B,YAAY,kFACZC,GAAG,WACHC,KAAK,WACL2B,KAAK,WACL3D,UAAU,eACViC,MAAOuB,EAAKD,SACZrB,SAAUwB,IAEjB,uBAAOpB,QAAQ,WAAf,2DAIZ,sBAAKtC,UAAU,cAAf,UACI,wBAAQA,UAAU,sBACVJ,MAAO,CAACkE,YAAY,IACpBC,SAAUzF,EACV0F,QAASH,EAHjB,4CAKA,wBAAQ7D,UAAU,gCACVgE,QAASJ,EACTG,SAAUzF,EAFlB,4FE5ElB2F,EAAc,WCGPC,EAAS,WAClB,IAAM/C,EAAUC,cACVC,EAAOR,qBAAWhD,GAOxB,OACI,8BACI,sBAAKmC,UAAU,4BAA4BJ,MAAO,CAACuE,QAAQ,UAA3D,UACI,sBAAMnE,UAAU,aAAhB,+GACA,qBAAI+B,GAAG,aAAa/B,UAAU,6BAA9B,UACI,6BAAI,cAAC,IAAD,CAASQ,GAAG,UAAZ,0DACJ,6BAAI,cAAC,IAAD,CAASA,GAAG,SAAZ,oDACJ,6BAAI,mBAAGgC,KAAK,IAAIwB,QAZV,SAAArC,GAClBA,EAAMyC,iBACN/C,EAAKnD,SACLiD,EAAQU,KAAK,MASG,uDCQTwC,MArBf,WAAgB,IAAD,EFJQ,WAAO,IAAD,EACChG,mBAAS,MADV,mBAClBN,EADkB,KACXuG,EADW,OAECjG,oBAAS,GAFV,mBAElBkG,EAFkB,KAEXC,EAFW,OAGGnG,mBAAS,MAHZ,mBAGlBL,EAHkB,KAGVyG,EAHU,KAKnBxG,EAAQU,uBAAa,SAAC+F,EAAS3C,GACrCuC,EAASI,GACTD,EAAU1C,GAEN4C,aAAaC,QAAQX,EAAahF,KAAKC,UAAU,CAC7ClB,OAAQ+D,EAAIhE,MAAO2G,OAEzB,IAEIxG,EAASS,uBAAa,WAC5B2F,EAAS,MACLG,EAAU,MACVE,aAAaE,WAAWZ,KAE1B,IAWF,OATAhD,qBAAW,WACP,IAAM3B,EAAOL,KAAK6F,MAAMH,aAAaI,QAAQd,IAE1C3E,GAAQA,EAAKvB,OACZE,EAAMqB,EAAKvB,MAAOuB,EAAKtB,QAE3BwG,GAAS,KACX,CAACvG,IAEI,CAACA,QAAOC,SAAQH,QAAQC,SAAOuG,SEzBMS,GAArCjH,EADI,EACJA,MAAOE,EADH,EACGA,MAAMC,EADT,EACSA,OAAOF,EADhB,EACgBA,OAAQuG,EADxB,EACwBA,MAC7BpG,IAAoBJ,EACpBkH,ECLe,SAAA9G,GACrB,OAAIA,EAEI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO+G,KAAK,SAASC,OAAK,EAA1B,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,KAAK,UAAUC,OAAK,EAA3B,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,KAAK,cAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAU1E,GAAG,eAKrB,eAAC,IAAD,WACI,cAAC,IAAD,CAAO0E,KAAK,IAAIC,OAAK,EAArB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAU3E,GAAG,SDjBN4E,CAAUjH,GAEzB,OAAIoG,EAIF,cAAC1G,EAAYwH,SAAb,CACApD,MAAO,CAAElE,QAAME,QAAOC,SAAOF,SAAOG,mBADpC,SAEA,eAAC,IAAD,WACKA,GAAmB,cAAC,EAAD,IACxB,qBAAK6B,UAAU,YAAf,SACKiF,SARI,cAAC,EAAD,KEFAK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a477069d.chunk.js","sourcesContent":["import {createContext} from 'react'\r\n\r\nfunction noop(){}\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: noop,\r\n    logout: noop,\r\n    isAuthenticated: false\r\n})","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () =>{\r\n    const [loading,setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const request = useCallback(async(url, method = 'GET',body = null, headers = {}) =>{\r\n        setLoading(true)\r\n        try{\r\n            if(body){\r\n                body = JSON.stringify(body)\r\n                headers['Content-Type'] = 'application/json'\r\n            }\r\n            const response = await fetch(url, {method, body,headers})\r\n            const data = await response.json()\r\n\r\n            if (!response.ok){\r\n                throw new Error(data.message || 'Что-то пошло не так')\r\n            }\r\n            setLoading(false)\r\n\r\n            return data\r\n        }catch(e){\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    },[])\r\n    const clearError = useCallback( () => setError(null),[])\r\n    return {loading, request, error,clearError}\r\n}","\r\nexport const Loader = () => (\r\n    <div style={{display: 'flex',justifyContent: 'center', paddingTop: '2rem'}}>\r\n        <div className=\"preloader-wrapper active\">\r\n            <div className=\"spinner-layer spinner-red-only\">\r\n                <div className=\"circle-clipper left\">\r\n                    <div className=\"circle\"></div>\r\n                </div>\r\n                <div className=\"gap-patch\">\r\n                    <div className=\"circle\"></div>\r\n                </div>\r\n                <div className=\"circle-clipper right\">\r\n                    <div className=\"circle\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>)\r\n","import {Link} from 'react-router-dom'\r\n\r\nexport const LinksList = ({ links }) => {\r\n    if (!links.length){\r\n        return <p className=\"center\"> Ссылок пока нет </p>\r\n    }\r\n    return (\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>N</th>\r\n                <th>Оригинальная</th>\r\n                <th>Сокращенная</th>\r\n                <th>Открыть</th>\r\n            </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            {links.map((link, index) => {\r\n                return(\r\n                    <tr key={link._id}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{link.from}</td>\r\n                        <td>{link.to}</td>\r\n                        <td>\r\n                            <Link to={`/detail/${link._id}`}>Открыть</Link>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })}\r\n            </tbody>\r\n        </table>\r\n\r\n    )\r\n}","import {AuthContext} from \"../context/AuthContext\";\r\nimport {Component, useCallback, useContext, useState} from \"react\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {useEffect} from \"react\";\r\nimport {Loader} from \"../components/Loader\";\r\nimport {LinksList} from \"../components/LinksList\";\r\n\r\n\r\n\r\nclass LinkList extends Component {\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const LinksPage = () =>{\r\n    const [links, setLinks] = useState([])\r\n    const {loading, request} = useHttp()\r\n    const {token} = useContext(AuthContext)\r\n\r\n    const fetchLinks = useCallback( async () =>{\r\n        try{\r\n            const fetched = await request('/api/link', 'GET', null, {\r\n                Authorization: `Bearer ${token}`\r\n            })\r\n            setLinks(fetched)\r\n        }catch (e){}\r\n    },[token, request])\r\n\r\n    useEffect( () =>{\r\n        fetchLinks()\r\n    },[fetchLinks])\r\n\r\n    if (loading) {\r\n        return <Loader />\r\n    }\r\n    return (\r\n        <>\r\n            {!loading && <LinksList links={links} />}\r\n        </>\r\n    )\r\n}","\r\nimport {useEffect, useState,useContext} from 'react'\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport const CreatePage = () =>{\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n    const {request} = useHttp()\r\n    const [link, setLink] = useState('')\r\n\r\n    useEffect(() =>{\r\n        window.M.updateTextFields()\r\n    },[])\r\n\r\n    const pressHandler  = async event => {\r\n        if(event.key === 'Enter'){\r\n            try{\r\n                const data = await request('/api/link/generate','POST',{from:link},{\r\n                    Authorization: `Bearer ${auth.token}`\r\n                })\r\n                history.push(`detail/${data.link._id}`)\r\n            }catch (e){\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n    return (\r\n            <div className=\"row\">\r\n            <div className=\"col s8 offset-s2\" style={{paddingTop: '2rem'}}>\r\n                <div className=\"input-field\">\r\n                    <input placeholder=\"Введите ссылку\"\r\n                           id=\"link\"\r\n                           type=\"text\"\r\n                           value={link}\r\n                           onChange={e => setLink(e.target.value)}\r\n                           onKeyPress={pressHandler}\r\n                    />\r\n                    <label htmlFor=\"link\">Введите ссылку</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","\r\nexport const LinkCard = ({link}) => {\r\n    return (\r\n        <>\r\n            <h2>Ссылка</h2>\r\n\r\n            <p>Ваша ссылка: <a href={link.to} target='_blank' rel=\"noopener noreferrer\">{link.to}</a></p>\r\n            <p>Откуда: <a href={link.from} target='_blank' rel=\"noopener noreferrer\">{link.from}</a></p>\r\n            <p>Количество кликов по ссылке: <strong>{link.clicks}</strong></p>\r\n            <p>Дата создания: <strong>{new Date(link.date).toLocaleDateString()}</strong></p>\r\n        </>\r\n    )\r\n}","import {useState,useCallback,useContext,useEffect} from \"react\";\r\nimport {useHttp} from \"../hooks/http.hook\"\r\nimport {useParams} from \"react-router-dom\"\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {Loader} from \"../components/Loader\";\r\nimport {LinkCard} from \"../components/LinkCard\";\r\n\r\n\r\n\r\n\r\nexport const DetailPage = () =>{\r\n    const {token} = useContext(AuthContext)\r\n    const {request, loading} = useHttp()\r\n    const [link, setLink] = useState(null)\r\n    const linkId = useParams().id\r\n\r\n    const getLink = useCallback( async () => {\r\n        try{\r\n            const fetched = await request(`/api/link/${linkId}`, 'GET', null,{\r\n                Authorization: `Bearer ${token}`\r\n            })\r\n            setLink(fetched)\r\n        }catch (e) {}\r\n    }, [token, linkId, request])\r\n\r\n    useEffect( () => {\r\n        getLink()\r\n    }, [getLink])\r\n\r\n    if (loading){\r\n        return <Loader />\r\n    }\r\n    return (\r\n        <>\r\n            { !loading && link && <LinkCard  link={link} /> }\r\n        </>\r\n    )\r\n}","import {useHttp} from \"../hooks/http.hook\";\r\nimport {useState,useEffect,useContext} from \"react\";\r\nimport {useMessage} from \"../hooks/message.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport const AuthPage = () =>{\r\n    const auth = useContext(AuthContext)\r\n    const message = useMessage()\r\n    const {loading,request,error,clearError} = useHttp()\r\n    const [form, setForm] = useState({\r\n        email:'', password:''\r\n    })\r\n    useEffect(()=> {\r\n        message(error)\r\n        clearError()\r\n    },[error,message,clearError])\r\n\r\n    useEffect(() =>{\r\n        window.M.updateTextFields()\r\n    },[])\r\n\r\n    const changeHandler = event =>{\r\n        setForm({...form, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    const registerHandler = async() =>{\r\n        try{\r\n            const data = await request('/api/auth/register','POST',{...form})\r\n            message(data.message)\r\n        }catch (e) {}\r\n    }\r\n    const loginHandler = async() =>{\r\n        try{\r\n            const data = await request('/api/auth/login','POST',{...form})\r\n            auth.login(data.token, data.userId)\r\n        }catch (e) {}\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s6 offset-s3\">\r\n                <h1>Сократи ссылку</h1>\r\n                <div className=\"card blue darken-1\">\r\n                    <div className=\"card-content white-text\">\r\n                        <span className=\"card-title\">Авторизация</span>\r\n                        <div>\r\n                            <div className=\"input-field\">\r\n                                <input placeholder=\"Введите email\"\r\n                                       id=\"email\"\r\n                                       type=\"text\"\r\n                                       name=\"email\"\r\n                                       className=\"yellow-input\"\r\n                                       value={form.email}\r\n                                       onChange={changeHandler}\r\n                                />\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <input placeholder=\"Введите пароль\"\r\n                                       id=\"password\"\r\n                                       type=\"password\"\r\n                                       name=\"password\"\r\n                                       className=\"yellow-input\"\r\n                                       value={form.password}\r\n                                       onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"password\">Пароль</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <button className=\"btn yellow darken-4\"\r\n                                style={{marginRight:10}}\r\n                                disabled={loading}\r\n                                onClick={loginHandler}\r\n                        >Войти</button>\r\n                        <button className=\"btn grey lighten-1 black-text\"\r\n                                onClick={registerHandler}\r\n                                disabled={loading}\r\n                        >Регистрация</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useCallback} from 'react'\r\n\r\nexport const useMessage = () => {\r\n    return useCallback(text =>{\r\n        if (window.M && text){\r\n            window.M.toast({ html: text})\r\n        }\r\n    },[])\r\n}","import {useState, useCallback,useEffect} from 'react'\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [ready, setReady] = useState(false)\r\n    const [userId, setUserId] = useState(null)\r\n\r\n    const login = useCallback( (jwtToken,id) => {\r\n    setToken(jwtToken)\r\n    setUserId(id)\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            userId: id, token: jwtToken\r\n        }))\r\n    },[])\r\n\r\n    const logout = useCallback( () => {\r\n    setToken(null)\r\n        setUserId(null)\r\n        localStorage.removeItem(storageName)\r\n\r\n    },[])\r\n\r\n    useEffect( () => {\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n        if(data && data.token) {\r\n            login(data.token, data.userId)\r\n        }\r\n        setReady(true)\r\n    },[login])\r\n\r\n    return {login, logout, token , userId,ready }\r\n}\r\n\r\n","\r\nimport {NavLink, useHistory} from \"react-router-dom\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {useContext} from \"react\";\r\n\r\nexport const Navbar = () => {\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n\r\n    const logoutHandler = event => {\r\n        event.preventDefault()\r\n        auth.logout()\r\n        history.push('/')\r\n    }\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper blue darken-1\" style={{padding:'0 2rem'}}>\r\n                <span className=\"brand-logo\">Сокращение ссылок</span>\r\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                    <li><NavLink to=\"/create\">Создать</NavLink></li>\r\n                    <li><NavLink to=\"/links\">Ссылки</NavLink></li>\r\n                    <li><a href=\"/\" onClick={logoutHandler} >Выйти</a></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}","import 'materialize-css'\nimport {BrowserRouter} from \"react-router-dom\";\nimport {useRoutes} from \"./pages/routes\";\nimport {useAuth} from \"./hooks/auth.hook\";\nimport {AuthContext} from \"./context/AuthContext\";\nimport {Navbar} from \"./components/Navbar\";\nimport {Loader} from './components/Loader'\n\nfunction App() {\n    const {token, login,logout,userId, ready} = useAuth()\n    const isAuthenticated = !!token\n    const routes = useRoutes(isAuthenticated)\n\n    if(!ready){\n        return <Loader />\n    }\n  return (\n      <AuthContext.Provider\n      value={{ token,login ,logout,userId,isAuthenticated}}>\n      <BrowserRouter>\n          {isAuthenticated && <Navbar/>}\n      <div className=\"container\">\n          {routes}\n      </div>\n      </BrowserRouter>\n      </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import {Switch, Route, Redirect} from 'react-router-dom'\r\nimport {LinksPage} from \"./LinksPage\";\r\nimport {CreatePage} from \"./CreatePage\";\r\nimport {DetailPage} from \"./DetailPage\";\r\nimport {AuthPage} from \"./AuthPage\";\r\n\r\nexport const useRoutes = isAuthenticated =>{\r\n    if (isAuthenticated) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/links\" exact>\r\n                    <LinksPage />\r\n                </Route>\r\n                <Route path=\"/create\" exact>\r\n                    <CreatePage />\r\n                </Route>\r\n                <Route path=\"/detail/:id\" >\r\n                    <DetailPage/>\r\n                </Route>\r\n                <Redirect to=\"/create\" />\r\n            </Switch>\r\n        )\r\n    }\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <AuthPage />\r\n            </Route>\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    )\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}